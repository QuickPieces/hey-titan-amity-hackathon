import { enableCache } from '~/cache/api';
import { client, connectClient, disconnectClient, comment11, user11 } from '~/utils/tests';
import { getComments } from '../getComments';

const apiResponse = {
  data: {
    comments: [comment11],
    commentChildren: [],
    users: [user11],
    files: [],
  },
};

const commentsListResponse = {
  data: [comment11],
};

describe('getComments', () => {
  beforeAll(connectClient);
  afterAll(disconnectClient);

  test('Should return the comments from backend', async () => {
    enableCache();
    client.http.get = jest.fn().mockResolvedValueOnce(apiResponse);
    const { data } = await getComments([comment11.commentId]);
    expect(data).toEqual(commentsListResponse.data);
  });

  test('Should return comments from locally', () => {
    const comments: ReturnType<typeof getComments.locally> = getComments.locally([
      comment11.commentId,
    ]);

    expect(comments?.data).toEqual(commentsListResponse.data);
  });
});

/**
 * ```js
 * import { getUsers } from '@amityco/ts-sdk'
 * const { data: users } = await getUsers(['foo', 'bar'])
 * ```
 *
 * Fetches a collection of {@link Amity.User} objects
 *
 * @param userIds the IDs of the {@link Amity.User} to fetch
 * @returns the associated collection of {@link Amity.User} objects
 *
 * @category User API
 * @async
 */
export declare const getUsers: {
    (userIds: Amity.User['userId'][]): Promise<Amity.Cached<Amity.User[]>>;
    /**
     * ```js
     * import { getUsers } from '@amityco/ts-sdk'
     * const { data: users } = getUsers.locally!(['foo', 'bar'])
     * ```
     *
     * Fetches a collection of {@link Amity.User} objects from cache
     *
     * @param userIds the IDs of the {@link Amity.User} to fetch
     * @returns the associated collection of {@link Amity.User} objects
     *
     * @category User API
     */
    locally(userIds: Amity.User['userId'][]): Amity.Cached<Amity.User[]> | undefined;
};
//# sourceMappingURL=getUsers.d.ts.map
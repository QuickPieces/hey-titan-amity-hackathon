/**
 * ```js
 * import { observeMessages } from '@amityco/ts-sdk'
 *
 * let messages = []
 *
 * const unsubscribe = observeMessages(channelId, message => merge(messages, message))
 * ```
 *
 * Observe all mutations on a list of {@link Amity.Message} for a given {@link Amity.SubChannel} object
 *
 * @param subChannelId the ID of the channel where to observe the messages
 * @param callback the function to call when new data are available
 * @returns An {@link Amity.Unsubscriber} function to run when willing to stop observing the messages
 *
 * @category Message Observer
 */
export declare const observeMessages: (subChannelId: Amity.SubChannel['subChannelId'], callback: Amity.ObjectListener<Amity.Snapshot<Amity.Message>, [
    'onCreate',
    'onUpdate',
    'onDelete'
]>) => Amity.Unsubscriber;
//# sourceMappingURL=observeMessages.d.ts.map
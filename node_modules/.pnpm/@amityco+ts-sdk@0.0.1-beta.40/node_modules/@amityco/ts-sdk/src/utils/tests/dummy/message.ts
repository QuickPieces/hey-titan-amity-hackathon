import { convertFromRaw } from '~/message/utils';
import { channel1, user11, file11 } from '.';

export function generateRawMessage(params?: Partial<Amity.RawMessage>): Amity.RawMessage {
  return {
    channelId: 'channel-id',
    channelPublicId: 'channel-public-id',
    channelType: 'community',
    childCount: 0,
    createdAt: new Date().toISOString(),
    creatorId: 'user-id',
    creatorPublicId: 'user-public-id',
    data: { text: 'message text' },
    dataType: 'text',
    editedAt: new Date().toISOString(),
    flagCount: 0,
    hashFlag: null,
    isDeleted: false,
    mentionedUsers: [],
    messageFeedId: 'message-feed-id',
    messageId: 'message-id',
    path: 'message-path',
    reactionCount: 0,
    segment: 1,
    tags: [],
    updatedAt: new Date().toISOString(),
    ...params,
  };
}

export const message11: Amity.Message = convertFromRaw(
  generateRawMessage({
    channelPublicId: channel1.channelId,
    creatorPublicId: user11.userId,
    messageId: 'message11',
  }),
);

export const messages = {
  subChannelId: message11.subChannelId,
  page1: [message11.messageId, 'messageId12', 'messageId13'],
  page2: ['messageId21', 'messageId22', 'messageId23'],
  page3: ['messageId31', 'messageId32', 'messageId33'],
};

export const messageQueryResponse = {
  data: {
    messages: [message11],
    files: [],
    users: [],
    paging: {
      previous: 'eyJiZWZvcmUiOjU1LCJsYXN0IjoxMH0=',
      next: 'eyJiZWZvcmUiOjU1LCJsYXN0IjoxMH0=',
    },
  },
};

// for testing ingest in cache
export const messagePayload = {
  messages: [message11],
  files: [file11],
  users: [user11],
};

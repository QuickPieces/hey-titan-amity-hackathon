/**
 * ```js
 * import { observeFollowers } from '@amityco/ts-sdk'
 *
 * let followers = []
 * const unsub = observeFollowers('userId', follower => merge(followers, follower))
 * ```
 *
 * Observe all mutations on a list of followers {@link Amity.FollowStatus} for a given user
 *
 * @param userId the ID of the {@link Amity.User}
 * @param callback the function to call when new data are available
 * @returns An {@link Amity.Unsubscriber} function to run when willing to stop observing the messages
 *
 * @category Follow Observer
 */
export declare const observeFollowers: <Events extends ["onRequested", "onAccepted", "onDeclined", "onCanceled", "onFollowed", "onUnfollowed", "onDeleted"]>(userId: Amity.User['userId'], callback: Amity.ObjectListener<Amity.FollowStatus, Events>) => Amity.Unsubscriber;
//# sourceMappingURL=observeFollowers.d.ts.map
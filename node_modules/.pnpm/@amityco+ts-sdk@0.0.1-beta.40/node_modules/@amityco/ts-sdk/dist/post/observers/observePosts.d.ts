/**
 * ```js
 * import { observePosts } from '@amityco/ts-sdk'
 *
 * let posts = []
 * const unsub = observePosts({
 *   targetType: Amity.PostTargetType,
 *   targetId: Amity.Post['targetId'],
 * }, post => merge(posts, post))
 * ```
 *
 * Observe all mutations on a list of {@link Amity.Post} for a given target object
 *
 * @param targetType the type of the target
 * @param targetId the ID of the target
 * @param callback the function to call when new data are available
 * @returns An {@link Amity.Unsubscriber} function to run when willing to stop observing the messages
 *
 * @category Post Observer
 */
export declare const observePosts: (params: {
    targetType: Amity.PostTargetType;
    targetId: Amity.Post['targetId'];
}, callback: Amity.ObjectListener<Amity.Post, [
    'onCreate',
    'onUpdate',
    'onDelete',
    'onApproved',
    'onDeclined',
    'onFlagged',
    'onUnflagged',
    'onReactionAdded',
    'onReactionRemoved'
]>) => Amity.Unsubscriber;
//# sourceMappingURL=observePosts.d.ts.map
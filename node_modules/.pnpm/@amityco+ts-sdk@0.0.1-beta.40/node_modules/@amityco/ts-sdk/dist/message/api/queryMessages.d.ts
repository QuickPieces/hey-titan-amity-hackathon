/**
 * ```js
 * import { queryMessages } from '@amityco/ts-sdk'
 * const messages = await queryMessages({ channelId })
 * ```
 *
 * Queries a paginable list of {@link Amity.Message} objects
 *
 * @param query The query parameters
 * @returns A page of {@link Amity.Message} objects
 *
 * @category Message API
 * @async
 */
export declare const queryMessages: {
    (query: Amity.QueryMessages): Promise<Amity.Cached<Amity.Paged<Amity.Message, Amity.Page<string>>>>;
    /**
     * ```js
     * import { queryMessages } from '@amityco/ts-sdk'
     * const messages = queryMessages.locally!({ channelId })
     * ```
     *
     * Queries a paginable list of {@link Amity.Message} objects from cache
     *
     * @param query The query parameters
     * @returns A page of {@link Amity.Message} objects
     *
     * @category Message API
     */
    locally(query: Parameters<typeof queryMessages>[0]): Amity.Cached<Amity.Paged<Amity.Message, Amity.Page<string>>> | undefined;
};
//# sourceMappingURL=queryMessages.d.ts.map
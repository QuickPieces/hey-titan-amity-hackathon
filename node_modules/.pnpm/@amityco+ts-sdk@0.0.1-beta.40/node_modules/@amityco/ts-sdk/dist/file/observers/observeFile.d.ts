/**
 * ```js
 * import { observeFile } from '@amityco/ts-sdk'
 *
 * let file = {}
 * const dispose = observeFile(fileId, updated => file = updated)
 * ```
 *
 * Observe all mutation on a given {@link Amity.File}
 *
 * @param fileId the ID of the file to observe
 * @param callback the function to call when new data are available
 * @returns An {@link Amity.Unsubscriber} function to run when willing to stop observing the file
 *
 * @category File Observer
 */
export declare const observeFile: <Events extends ["onFetch"]>(fileId: string, callback: Amity.ObjectListener<Amity.Snapshot<Amity.File<any>>, Events>) => Amity.Unsubscriber;
//# sourceMappingURL=observeFile.d.ts.map
import { user11, user12, file11, communityUser11, date, feed11 } from '.';

import { encodeJson } from '..';

export function generatePost(params?: Partial<Amity.Post>): Amity.Post {
  return {
    children: [],
    comments: [],
    commentsCount: 0,
    createdAt: date,
    data: { text: 'post11' },
    editedAt: date,
    feedId: '',
    flagCount: 0,
    hashFlag: null,
    hasFlaggedComment: false,
    hasFlaggedChildren: false,
    parentId: 'postId12',
    path: '',
    postedUserId: user11.userId,
    postId: 'postId11',
    isDeleted: false,
    reactions: {},
    reactionsCount: 0,
    targetId: user11.userId,
    targetType: 'user',
    updatedAt: date,
    ...params,
  };
}

export function generateComment(params?: Partial<Amity.Comment>): Amity.Comment {
  return {
    path: '',
    referenceType: 'post',
    dataType: 'text',
    dataTypes: ['text'],
    rootId: 'test',
    data: {
      text: 'yellow new world',
    },
    childrenNumber: 0,
    isDeleted: false,
    editedAt: '2022-10-31T05:57:45.661Z',
    updatedAt: '2022-10-31T05:57:45.670Z',
    createdAt: '2022-10-31T05:57:45.661Z',
    segmentNumber: 2,
    commentId: 'comment11',
    userId: 'test',
    referenceId: 'postId11',
    flagCount: 0,
    hashFlag: null,
    children: [],
    mentionees: [],
    reactions: {},
    reactionsCount: 0,
    attachments: [],
    ...params,
  };
}

export const post11: Amity.Post = generatePost();

export const post12: Amity.Post = {
  ...post11,
  postId: 'post12',
};

export const post13: Amity.Post = {
  ...post11,
  postId: 'post13',
};

export const post14: Amity.Post = {
  ...post11,
  postId: 'post14',
  targetType: 'community',
  feedId: 'feedId',
  isDeleted: false,
  children: [],
};

export const post15: Amity.Post = {
  ...post11,
  postId: 'post15',
  isDeleted: true,
  children: [post11.postId],
  feedId: 'feedId',
  targetType: 'community',
  tags: ['test_tag'],
};

export const post16: Amity.Post = {
  ...post11,
  postId: 'post16',
  targetType: 'user',
};

export const comment11: Amity.Comment = generateComment();

export const imageComment11: Amity.Comment = generateComment({
  dataTypes: ['image'],
  data: { text: '' },
  attachments: [
    {
      type: 'image',
      fileId: file11.fileId,
    },
  ],
});

export const textImageComment11: Amity.Comment = generateComment({
  dataTypes: ['image', 'text'],
  data: { text: 'test' },
  attachments: [
    {
      type: 'image',
      fileId: file11.fileId,
    },
  ],
});

export const textMentionComment11: Amity.Comment = generateComment({
  mentionees: [
    {
      type: 'user',
      userIds: [user11._id, user12._id],
    },
  ],
});

export const textWithParentComment11: Amity.Comment = generateComment({
  parentId: post12.postId,
});

export const posts = {
  targetId: user11.userId,
  targetType: 'user' as Amity.PostTargetType,
  page1: [post11.postId, post12.postId, post13.postId],
  page2: ['postId21', 'postId22', 'postId23'],
  page3: ['postId31', 'postId32', 'postId33'],
};

export const textCommentPayload: Amity.CommentPayload = {
  comments: [comment11],
  users: [user11],
  commentChildren: [],
  files: [],
};

export const imageCommentPayload: Amity.CommentPayload = {
  comments: [imageComment11],
  users: [user11],
  commentChildren: [],
  files: [file11],
};

export const textImageCommentPayload: Amity.CommentPayload = {
  comments: [textImageComment11],
  users: [user11, user12],
  commentChildren: [],
  files: [file11],
};

export const textCommentMentionPayload: Amity.CommentPayload = {
  comments: [textMentionComment11],
  commentChildren: [],
  users: [user11],
  files: [],
};

export const textCommentParentIdPayload: Amity.CommentPayload = {
  comments: [textWithParentComment11],
  commentChildren: [],
  users: [user11],
  files: [],
};

export const postPayload: Amity.ProcessedPostPayload = {
  posts: [post11],
  users: [user11],
  files: [file11],
  comments: [comment11],
  communityUsers: [],
  categories: [],
  communities: [],
  feeds: [],
  postChildren: [],
};

export const emptyPostPayload = {
  posts: [],
  postChildren: [],
  communities: [],
  communityUsers: [],
  categories: [],
  comments: [],
  feeds: [],
  users: [],
  files: [],
};

const nextPage = encodeJson({ before: post13.postId, limit: 10 });

export const postQueryResponse = {
  data: {
    ...emptyPostPayload,
    posts: [post11, post12, post13],
    reactor: { userId: 'test' },
    paging: {
      next: nextPage,
    },
  } as Amity.ProcessedPostPayload & Amity.Pagination,
};

export const postQueryResponsePage2 = {
  data: {
    ...emptyPostPayload,
    posts: [post14, post15],
    feeds: [{ ...feed11, feedType: 'reviewing', targetId: post14.targetId, feedId: post14.feedId }],
    paging: {
      next: nextPage,
    },
  } as Amity.ProcessedPostPayload & Amity.Pagination,
};

/**
 * ```js
 * import { queryStreams } from '@amityco/ts-sdk'
 * const streams = await queryStreams()
 * ```
 *
 * Queries a paginable list of {@link Amity.Stream} objects
 *
 * @param query The query parameters
 * @returns A page of {@link Amity.Stream} objects
 *
 * @category Stream API
 * @async
 */
export declare const queryStreams: {
    (query?: {
        isLive?: boolean;
        statuses?: Amity.StreamStatus[];
        userPublicIds?: Amity.User['userId'][];
        sortBy?: 'lastCreated' | 'firstCreated';
        isDeleted?: Amity.Stream['isDeleted'];
        page?: Amity.Page;
    }): Promise<Amity.Cached<Amity.Paged<Amity.Stream>>>;
    /**
     * ```js
     * import { queryStreams } from '@amityco/ts-sdk'
     * const streams = queryStreams.locally()
     * ```
     *
     * Queries a paginable list of {@link Amity.Stream} objects from cache
     *
     * @param query The query parameters
     * @returns streams
     *
     * @category Stream API
     */
    locally(query: Parameters<typeof queryStreams>[0]): void;
};
//# sourceMappingURL=queryStreams.d.ts.map
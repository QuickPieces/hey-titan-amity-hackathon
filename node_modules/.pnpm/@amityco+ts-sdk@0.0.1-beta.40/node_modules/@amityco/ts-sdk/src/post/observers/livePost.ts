import { liveObject } from '~/utils/liveObject';
import { getPost } from '../api';
import {
  onPostApproved,
  onPostDeclined,
  onPostDeleted,
  onPostFlagged,
  onPostReactionAdded,
  onPostReactionRemoved,
  onPostUnflagged,
  onPostUpdated,
} from '../events';

/**
 * ```js
 * import { livePost } from '@amityco/ts-sdk';
 *
 * let post;
 *
 * const unsubscribe = livePost(postId, response => {
 *   post = response.data;
 * });
 * ```
 *
 * Observe all mutation on a given {@link Amity.Post}
 *
 * @param postId the ID of the message to observe
 * @param callback the function to call when new data are available
 * @returns An {@link Amity.Unsubscriber} function to run when willing to stop observing the sub channel
 *
 * @category Post Live Object
 */
export const livePost = (
  postId: Amity.Post['postId'],
  callback: Amity.LiveObjectCallback<Amity.Post>,
): Amity.Unsubscriber => {
  return liveObject(postId, callback, 'postId', getPost, [
    onPostApproved,
    onPostDeclined,
    onPostDeleted,
    onPostFlagged,
    onPostReactionAdded,
    onPostReactionRemoved,
    onPostUnflagged,
    onPostUpdated,
  ]);
};

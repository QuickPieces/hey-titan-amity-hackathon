export {};

declare global {
  namespace Amity {
    /**
     * type map of "domain name -> ASC model"
     * @hidden
     */
    type Models = {
      user: Amity.User;
      file: Amity.File;
      role: Amity.Role;

      channel: Amity.Channel;
      subChannel: Amity.SubChannel;
      channelUsers: Amity.Membership<'channel'>;
      message: Amity.Message;

      community: Amity.Community;
      category: Amity.Category;
      communityUsers: Amity.Membership<'community'>;
      post: Amity.Post;
      comment: Amity.Comment;
      poll: Amity.Poll;
      reaction: Amity.Reaction;

      stream: Amity.Stream;

      follow: Amity.FollowStatus;
      followCount: Amity.FollowCount;

      feed: Amity.Feed;
    };

    type Model = ValueOf<Models>;
    type Domain = keyof Models;

    /**
     * Definition of the minimal set of properties necessary to identify
     * successfully a model.
     * @hidden
     */
    type Minimal = {
      user: Pick<Amity.User, 'userId'>;
      file: Pick<Amity.File, 'fileId'>;
      role: Pick<Amity.Role, 'roleId'>;

      channel: Pick<Amity.Channel, 'channelId'>;
      subChannel: Pick<Amity.SubChannel, 'subChannelId'>;
      channelUsers: Pick<Amity.Membership<'channel'>, 'channelId' | 'userId'>;
      message: Pick<Amity.Message, 'messageId'>;

      community: Pick<Amity.Community, 'communityId'>;
      category: Pick<Amity.Category, 'categoryId'>;
      communityUsers: Pick<Amity.Membership<'community'>, 'communityId' | 'userId'>;
      post: Pick<Amity.Post, 'postId'>;
      comment: Pick<Amity.Comment, 'commentId'>;
      poll: Pick<Amity.Poll, 'pollId'>;
      reaction: Pick<Amity.Reaction, 'reactionId'>;

      stream: Pick<Amity.Stream, 'streamId'>;

      follow: Pick<Amity.FollowStatus, 'from' | 'to'>;
      followCount: Pick<Amity.FollowCount, 'userId'>;

      feed: Pick<Amity.Feed, 'targetId' | 'feedId'>;
    };
  }
}

/**
 * ```js
 * import { observeFollowInfo } from '@amityco/ts-sdk'
 *
 * let followInfo = {}
 * const dispose = observeFollowInfo(userId, updated => followInfo = updated)
 * ```
 *
 * Observe all mutation on a given {@link Amity.FollowInfo}
 *
 * @param userId the ID of the user to observe
 * @param callback the function to call when new data are available
 * @returns An {@link Amity.Unsubscriber} function to run when willing to stop observing the post
 *
 * @category Follow Observer
 */
export declare const observeFollowInfo: <Events extends ["onFetch", "onUpdate"]>(userId: Amity.User['userId'], callback: Amity.ObjectListener<Amity.Snapshot<Amity.FollowInfo>, Events>, policy?: Amity.QueryPolicy) => Amity.Unsubscriber;
//# sourceMappingURL=observeFollowInfo.d.ts.map
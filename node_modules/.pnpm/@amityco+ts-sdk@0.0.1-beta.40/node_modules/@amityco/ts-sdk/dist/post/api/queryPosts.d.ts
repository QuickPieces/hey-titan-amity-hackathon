/**
 * ```js
 * import { queryPosts } from '@amityco/ts-sdk'
 * const { data: posts, prevPage, nextPage } = await queryPosts({ targetId, targetType })
 * ```
 *
 * Queries a paginable list of {@link Amity.Post} objects
 *
 * @param query The query parameters
 * @returns posts
 *
 * @category Post API
 * @async
 */
export declare const queryPosts: {
    (query: Amity.QueryPosts): Promise<Amity.Cached<Amity.Paged<Amity.Post, Amity.PageRaw>>>;
    /**
     * ```js
     * import { queryPosts } from '@amityco/ts-sdk'
     * const { data: posts, prevPage, nextPage } = queryPosts.locally({ targetId, targetType })
     * ```
     *
     * Queries a paginable list of {@link Amity.Post} objects from cache
     *
     * @param query The query parameters
     * @returns posts
     *
     * @category Post API
     */
    locally(query: Parameters<typeof queryPosts>[0]): Amity.Cached<Amity.Paged<Amity.Post, Amity.PageRaw>> | undefined;
};
//# sourceMappingURL=queryPosts.d.ts.map